学习git和github的使用。

1.安装git软件。
www.git-scm.com
2.在github上注册信息。
3.  git config --global user.name 'XXX'
    git config --global user.email 'XXX@XX.com'
4.创建文件夹，
5.  cd + 文件夹
6.初始化
    git init
7.查询git信息
    git config --global -l
8.本地编辑完成代码后，提交到暂存区
    git add XXX.XX
    git add .    or   git add -A
9.查看文件的状态（红色在本地，绿色在暂存区，没有信息，代表所有信息都提交了）。
    git status
10.把暂存区文件提交到历史区
    git commit -m'本次提交内容的描述‘
11.几个命令
    ls      clear     
12.查看历史版本
    git log(查看历史版本）
    git reflog(查看所有历史版本）	
13.回退到历史版本
	git reset --hard (版本号)
14.git 和 github：
	创建仓库
	招募合作者
	本地仓库提交到远程仓库
	查看本地仓库和哪些远程仓库保持连接
	git remote -v
	让本地仓库和远程仓库新建一个链接,origin是随便起的一个链接名字，可以改。只不过一般都用这个名字。	
	git remote add origin [git 远程仓库地址】	
	删除该链接
	git remote rm origin
	提交之前最好先拉取
	git pull origin master
	把本地代码提交到远程仓库（需要输入github的用户名密码）
	git push origin master
	git clone [远程仓库git地址】 【别名：可以不设置，默认仓库名】
真实项目开发流程：
1.组长先创建中央仓库(z增加协作者）
2.小组成员基于git clone把原创仓库克隆下来。
解决了三件事情：初始化、关联、拉取
3.此后的动作可以用：git push，git pull等完成，不必家用origin等链接名称。
每个组员完成自己的代码后，基于‘git add ./git commit'把自己修改的内容放到历史区，然后通过‘git push/git pull’把本地信息和远程仓库信息保持同步即可（可能设计冲突的处理）。

15.
NPM (node package manger)node 模块管理工具，根据NPM我们可以快速安装、卸载所需要的资源文件（例如：jQuery\vue\vuerouter)

去node官网：https://nodejs.org/zh-cn     下载长期支持版，安装node后，NPM也就安装完成了。
node -v
npm -v
用了来查看版本号，说明安装成功。
###基于npm进行模块管理
https://www.npmjs.com/    基于npm是从npmjs。com平台上下载安装

npm install XXX       把模块安装在当前项目当中（node_modules)
npm install XXX -g    把模块安装在全局环境中
npm i XXX@1.1.1       安装制定版本号的模块
npm view xxx versions > xxx.version.json         查看某个模块的版本信息（输出到指定json文件中）
npm init -y     初始化当前项目的配置依赖清单
npm i xxx --save  把模块清单保存在清单生产依赖中
npm i xxx --save-dev  把模块保存在清单开发依赖中
npm install          跑环境，按照清单安装所需的模块
npm root -g          查看全局安装模块的目录
npm unstall xxx
npm unstall xxx -g    卸载安装过的模块

学习结束。

